profile_order_receipt:
    path:     /profile/orders/{orderNumber}/receipt.pdf
    defaults: { _controller: AppBundle\Controller\ProfileController::orderReceiptAction }
    methods:  [ GET ]

profile_order_receipt_generate:
    path:     /profile/orders/{orderNumber}/generate-receipt
    defaults: { _controller: AppBundle\Controller\ProfileController::generateOrderReceiptAction }
    methods:  [ POST ]

profile_order:
    path:     /profile/orders/{id}
    defaults: { _controller: AppBundle\Controller\ProfileController::orderAction }
    methods:  [ GET, POST ]

profile_orders:
    path:     /profile/orders
    defaults:
        _controller: AppBundle\Controller\ProfileController::orderListAction
        layout: 'profile.html.twig'
        template: 'profile/orders.html.twig'
        routes:
            restaurant: restaurant
            order_receipt: profile_order_receipt
            order_receipt_generate: profile_order_receipt_generate
            order: profile_order
    methods:  [ GET ]

profile_restaurant:
    path: /profile/restaurants/{id}
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantAction
        layout: 'profile.html.twig'
        template: 'restaurant/form.html.twig'
        routes:
            success: profile_restaurant
            restaurants: profile_restaurants
            menu_taxons: profile_restaurant_menu_taxons
            menu_taxon: profile_restaurant_menu_taxon
            products: profile_restaurant_products
            product_options: profile_restaurant_product_options
            dashboard: profile_restaurant_dashboard
            planning: profile_restaurant_planning
    methods: [ GET, POST ]

profile_restaurants:
    path: /profile/restaurants
    defaults:
        _controller: Symfony\Bundle\FrameworkBundle\Controller\RedirectController::urlRedirectAction
        path: /profile/
        permanent: false
    methods: [ GET ]

profile_restaurant_dashboard:
    path: /profile/restaurants/{restaurantId}/dashboard
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantDashboardAction
        layout: 'profile.html.twig'
        template: 'restaurant/dashboard.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            dashboard: profile_restaurant_dashboard
            order_accept: profile_order_accept
            order_refuse: profile_order_refuse
            order_cancel: profile_order_cancel
            order_delay: profile_order_delay
            order_fulfill: profile_order_fulfill
            user_details: user
    methods: [ GET ]

profile_restaurant_preparation_time:
    path: /profile/restaurants/{id}/preparation-time
    defaults:
        _controller: AppBundle\Controller\ProfileController::preparationTimeAction
        layout: 'profile.html.twig'
        template: 'restaurant/preparation_time.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            success: profile_restaurant_preparation_time
    methods: [ GET ]

profile_restaurant_stats:
    path: /profile/restaurants/{id}/stats
    defaults:
        _controller: AppBundle\Controller\ProfileController::statsAction
        layout: 'profile.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
    methods: [ GET, POST ]

profile_restaurant_new_reusable_packaging:
    path: /profile/restaurants/{id}/deposit-refund/packagings/new
    defaults:
        _controller: AppBundle\Controller\ProfileController::newRestaurantReusablePackagingAction
        layout: 'profile.html.twig'
    methods: [ GET, POST ]

profile_restaurant_deposit_refund:
    path: /profile/restaurants/{id}/deposit-refund
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantDepositRefundAction
        layout: 'profile.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
    methods: [ GET, POST ]

profile_order_accept:
    path: /profile/orders/{id}/accept
    defaults:
        _controller: AppBundle\Controller\ProfileController::acceptOrderAction
    methods: [ POST ]

profile_order_refuse:
    path: /profile/orders/{id}/refuse
    defaults:
        _controller: AppBundle\Controller\ProfileController::refuseOrderAction
    methods: [ POST ]

profile_order_delay:
    path: /profile/orders/{id}/delay
    defaults:
        _controller: AppBundle\Controller\ProfileController::delayOrderAction
    methods: [ POST ]

profile_order_cancel:
    path: /profile/orders/{id}/cancel
    defaults:
        _controller: AppBundle\Controller\ProfileController::cancelOrderAction
    methods: [ POST ]

profile_order_fulfill:
    path: /profile/orders/{id}/fulfill
    defaults:
        _controller: AppBundle\Controller\ProfileController::fulfillOrderAction
    methods: [ POST ]

profile_restaurant_menu_taxons:
    path: /profile/restaurants/{id}/menus
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantMenuTaxonsAction
        layout: 'profile.html.twig'
        template: 'restaurant/menu_taxons.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            menu: profile_restaurant_menu_taxon
            menu_activate: profile_restaurant_menu_taxon_activate
            menu_taxon: profile_restaurant_menu_taxon
    methods: [ GET, POST ]

profile_restaurant_menu_taxon:
    path: /profile/restaurants/{restaurantId}/menus/{menuId}
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantMenuTaxonAction
        layout: 'profile.html.twig'
        template: 'restaurant/menu_taxon.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            menu_taxons: profile_restaurant_menu_taxons
            products: profile_restaurant_products
            delete_section: profile_delete_restaurant_menu_taxon_child
            success: profile_restaurant_menu_taxons
    methods: [ GET, POST ]

profile_restaurant_menu_taxon_activate:
    path: /profile/restaurants/{restaurantId}/menus/{menuId}/activate
    defaults:
        _controller: AppBundle\Controller\ProfileController::activateRestaurantMenuTaxonAction
        layout: 'profile.html.twig'
        routes:
            menu_taxons: profile_restaurant_menu_taxons
    methods: [ POST ]

profile_delete_restaurant_menu_taxon_child:
    path: /profile/restaurants/{restaurantId}/menus/{menuId}/sections/{sectionId}/delete
    defaults:
        _controller: AppBundle\Controller\ProfileController::deleteRestaurantMenuTaxonChildAction
        layout: 'profile.html.twig'
        routes:
            menu_taxon: profile_restaurant_menu_taxon
    methods: [ POST ]

profile_restaurant_products:
    path: /profile/restaurants/{id}/products
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantProductsAction
        layout: 'profile.html.twig'
        template: 'restaurant/products.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            product: profile_restaurant_product
            new_product: profile_restaurant_product_new
    methods: [ GET ]

profile_restaurant_product_new:
    path: /profile/restaurants/{id}/products/new
    defaults:
        _controller: AppBundle\Controller\ProfileController::newRestaurantProductAction
        layout: 'profile.html.twig'
        template: 'restaurant/product.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            products: profile_restaurant_products

profile_delete_restaurant_product_image:
    path: /profile/restaurants/{restaurantId}/products/{productId}/images/{imageName}
    defaults:
        _controller: AppBundle\Controller\ProfileController::deleteProductImageAction
    methods: [ DELETE ]

profile_restaurant_product:
    path: /profile/restaurants/{restaurantId}/products/{productId}
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantProductAction
        layout: 'profile.html.twig'
        template: 'restaurant/product.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            products: profile_restaurant_products

profile_restaurant_planning:
    path: /profile/restaurants/{id}/planning
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantPlanningAction
        layout: 'profile.html.twig'
        template: 'restaurant/planning.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            success: profile_restaurant_planning
    methods: [ GET, POST ]

profile_restaurant_product_options:
    path: /profile/restaurants/{id}/product-options
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantProductOptionsAction
        layout: 'profile.html.twig'
        template: 'restaurant/product_options.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            product_option: profile_restaurant_product_option
            new_product_option: profile_restaurant_product_option_new
    methods: [ GET ]

profile_restaurant_product_option_new:
    path: /profile/restaurants/{id}/product-options/new
    defaults:
        _controller: AppBundle\Controller\ProfileController::newRestaurantProductOptionAction
        layout: 'profile.html.twig'
        template: 'restaurant/product_option.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            product_options: profile_restaurant_product_options
    methods: [ GET, POST ]

profile_restaurant_product_option:
    path: /profile/restaurants/{restaurantId}/product-options/{optionId}
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantProductOptionAction
        layout: 'profile.html.twig'
        template: 'restaurant/product_option.html.twig'
        routes:
            restaurants: profile_restaurants
            restaurant: profile_restaurant
            product_options: profile_restaurant_product_options
    methods: [ GET, POST ]

profile_restaurant_product_option_preview:
    path: /profile/restaurants/product-options/preview
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantProductOptionPreviewAction
    methods: [ POST ]

profile_restaurant_stripe_oauth_redirect:
    path: /profile/restaurants/{id}/stripe-oauth-redirect
    defaults:
        _controller: AppBundle\Controller\ProfileController::stripeOAuthRedirectAction
        redirect_after: profile_restaurant
    methods: [ GET ]

profile_restaurant_promotions:
    path: /profile/restaurants/{id}/promotions
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantPromotionsAction
        layout: 'profile.html.twig'
    methods: [ GET ]

profile_restaurant_new_promotion:
    path: /profile/restaurants/{id}/promotions/new
    defaults:
        _controller: AppBundle\Controller\ProfileController::newRestaurantPromotionAction
        layout: 'profile.html.twig'
        routes:
            restaurant_promotions: profile_restaurant_promotions
    methods: [ GET, POST ]

profile_restaurant_promotion:
    path: /profile/restaurants/{restaurantId}/promotions/{promotionId}
    defaults:
        _controller: AppBundle\Controller\ProfileController::restaurantPromotionAction
        layout: 'profile.html.twig'
        routes:
            restaurant_promotions: profile_restaurant_promotions
    methods: [ GET, POST ]

profile_delivery:
  path: /profile/deliveries/{id}
  defaults:
      _controller: AppBundle\Controller\ProfileController::deliveryAction
      layout: 'profile.html.twig'
      routes:
          success: profile_deliveries
  methods:  [ GET, POST ]

profile_stores:
    path: /profile/stores
    defaults:
        _controller: Symfony\Bundle\FrameworkBundle\Controller\RedirectController::urlRedirectAction
        path: /profile/
        permanent: false
    methods:  [ GET ]

profile_store:
    path: /profile/stores/{id}
    defaults:
        _controller: AppBundle\Controller\ProfileController::storeAction
        layout: 'profile.html.twig'
        routes:
            stores: profile_stores
            store: profile_store
            store_delivery_new: profile_store_delivery_new
            store_deliveries: profile_store_deliveries
            store_address_new: profile_store_address_new
            store_address: profile_store_address
    methods:  [ GET, POST ]

profile_store_deliveries:
    path: /profile/stores/{id}/deliveries
    defaults:
        _controller: AppBundle\Controller\ProfileController::storeDeliveriesAction
        layout: 'profile.html.twig'
        routes:
            stores: profile_stores
            store: profile_store
    methods:  [ GET, POST ]

profile_store_delivery_new:
    path: /profile/stores/{id}/deliveries/new
    defaults:
        _controller: AppBundle\Controller\ProfileController::newStoreDeliveryAction
        layout: 'profile.html.twig'
        routes:
            stores: profile_stores
            store: profile_store
            success: profile_store_deliveries
        show_left_menu: false
    methods:  [ GET, POST ]

profile_store_address_new:
    path: /profile/stores/{id}/addresses/new
    defaults:
        _controller: AppBundle\Controller\ProfileController::newStoreAddressAction
        layout: 'profile.html.twig'
        routes:
            stores: profile_stores
            store: profile_store
    methods:  [ GET, POST ]

profile_store_address:
    path: /profile/stores/{storeId}/addresses/{addressId}
    defaults:
        _controller: AppBundle\Controller\ProfileController::storeAddressAction
        layout: 'profile.html.twig'
        routes:
            stores: profile_stores
            store: profile_store
    methods:  [ GET, POST ]
